# Files in the config/locales directory are used for internationalization and
# are automatically loaded by Rails. If you want to use locales other than
# English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more about the API, please read the Rails Internationalization guide
# at https://guides.rubyonrails.org/i18n.html.
#
# Be aware that YAML interprets the following case-insensitive strings as
# booleans: `true`, `false`, `on`, `off`, `yes`, `no`. Therefore, these strings
# must be quoted to be interpreted as strings. For example:
#
#     en:
#       "yes": yup
#       enabled: "ON"

en:
  hello: "Hello world"

  menu:
    home: "Home"
    carros: "Cars"
    fornecedores: "Suppliers"
    tipos_de_fornecedores: "Types of Suppliers"
    enderecos: "Addresses"
    stimulus: "Stimulus page"
    sair: "exit"
    i18n_mudar: "Change to Portuguese"
    lingua_mudar: "pt-BR"
  
  home:
    titulo: "Welcome to Cars System"
    descricao: "I am Danilo Aparecido, a teacher at Digital Innovation One (DIO), and in this class, we are diving into the fascinating world of Rails' ERB. Here, you will learn to transform ideas into impressive layouts, exploring the flexibility and power of Rails to create dynamic interfaces. This example is just a glimpse of what we can achieve together. Let's move forward!"
    botao: "See the cars"
